name:                  gibbon
version:               0.1.0.0
synopsis:              A compiler for operating on serialized trees.
-- description:
-- license:
-- license-file:          LICENSE
author:                Ryan Newton
maintainer:            rrnewton@gmail.com
-- copyright:
-- category:
build-type:            Simple
extra-source-files:    README.md, cbits/rts.c
cabal-version:         >=1.10

flag LLVM_ENABLED
  description:         Enable LLVM backend
  default:             False

library
  exposed-modules:     Gibbon.Common
                       Gibbon.Compiler
                       Gibbon.DynFlags
                       Gibbon.TargetInterp
                       Gibbon.Pretty
                       Gibbon.Interp

                       Gibbon.Language
                       Gibbon.Language.Syntax
                       Gibbon.Language.Constants

                       Gibbon.L1.Syntax
                       Gibbon.L1.Typecheck
                       Gibbon.L1.Examples
                       Gibbon.L2.Syntax
                       Gibbon.L2.Typecheck
                       Gibbon.L2.Examples
                       Gibbon.L4.Syntax
                       Gibbon.L1.Interp
                       Gibbon.L2.Interp
                       Gibbon.L3.Syntax
                       Gibbon.L3.Typecheck
                       Gibbon.SExpFrontend

                       -- Polymorphism stuff:
                       Gibbon.HaskellFrontend
                       Gibbon.L0.Syntax
                       Gibbon.L0.Typecheck
                       Gibbon.L0.Specialize2
                       -- -- Gibbon.L0.Specialize
                       -- -- Gibbon.L0.Mono
                       -- -- This one looks far from done:
                       -- -- Gibbon.L0.Interp

                       -- compiler passes, roughly in the order they're run
                       Gibbon.Passes.Freshen
                       Gibbon.Passes.Flatten
                       Gibbon.Passes.InlineTriv
                       Gibbon.Passes.Sequentialize
                       Gibbon.Passes.DirectL3
                       Gibbon.Passes.Fusion2
                       Gibbon.Passes.RepairProgram
                       Gibbon.Passes.AddRAN
                       Gibbon.Passes.AddTraversals
                       Gibbon.Passes.InferLocations
                       Gibbon.Passes.RemoveCopies
                       Gibbon.Passes.InferEffects
                       Gibbon.Passes.ParAlloc
                       Gibbon.Passes.InferRegionScope
                       Gibbon.Passes.RouteEnds
                       Gibbon.Passes.ThreadRegions
                       Gibbon.Passes.Cursorize
                       Gibbon.Passes.FindWitnesses
                       Gibbon.Passes.ShakeTree
                       Gibbon.Passes.HoistNewBuf
                       Gibbon.Passes.Unariser
                       Gibbon.Passes.Lower
                       Gibbon.Passes.FollowRedirects
                       Gibbon.Passes.RearrangeFree
                       Gibbon.Passes.Codegen

                       -- template haskell
                       Gibbon.TH
                       Gibbon.THExample

  other-extensions:    DeriveDataTypeable CPP

  build-depends:       base                     >= 4.9       &&  < 4.13
                     , bytestring               >= 0.10.8.1  &&  < 0.11
                     , text                     >= 1.2.3     &&  < 1.3
                     , process                  >= 1.4.3     &&  < 1.7
                     , filepath                 >= 1.4.1     &&  < 1.5
                     , directory                >= 1.3       &&  < 1.4
                     , containers               >= 0.5.8     &&  < 0.7
                     , deepseq                  >= 1.4.2     &&  < 1.5
                     , mtl                      >= 2.2.1     &&  < 2.3
                     , transformers             >= 0.5.2     &&  < 0.6
                     , clock                    >= 0.7.1     &&  < 0.8
                     , random                   >= 1.1       &&  < 1.2
                     , vector
                     , tuple
                     -- Parsers:
                     , parsec                   >= 3.1.13    &&  < 3.2
                     , optparse-applicative     >= 0.13.2    &&  < 0.15
                     , haskell-src-exts         >= 1.20.2    &&  < 1.21
                     , s-cargot                 >= 0.1.3     &&  < 0.2
                     , srcloc                   >= 0.5.1     &&  < 0.6
                     , symbol                   >= 0.2.4     &&  < 0.3
                     -- Pretty printers:
                     , pretty                   >= 1.1.1.3   &&  < 1.2
                     , GenericPretty            >= 1.2.1     &&  < 1.3
                     , language-c-quote         >= 0.12.1    &&  < 0.13
                     , mainland-pretty          >= 0.6.1     &&  < 0.8
                     -- Template Haskell:
                     , template-haskell >= 2.14 && <2.15
-- Brings in lots of ekmett dependencies:
--                     , either

  if flag(LLVM_ENABLED)
    -- exposed-modules:
    build-depends:     llvm-hs-pure             >= 6.2.0     &&  < 0.7
                     , llvm-hs                  >= 6.2.0     &&  < 0.7
    cpp-options:       -DLLVM_ENABLED

  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options:         -Wall -Wno-orphans -Wredundant-constraints
                       -Wno-partial-type-signatures -Wno-unused-top-binds
                       -Wno-typed-holes -fdefer-typed-holes
  default-extensions:  ScopedTypeVariables PatternSynonyms DeriveGeneric DeriveFunctor
                       NamedFieldPuns TupleSections TypeFamilies
                       PartialTypeSignatures OverloadedStrings
                       -- This can break things: DeriveAnyClass

executable gibbon
  hs-source-dirs:      app
  main-is:             Frontend.hs

  build-depends:       base
                     , haskell-src-exts
                     , filepath
                     , gibbon

  default-language:    Haskell2010
  ghc-options:         -Wall -rtsopts -fdefer-typed-holes
  default-extensions:  TypeFamilies


test-suite test-gibbon
  type:                exitcode-stdio-1.0
  hs-source-dirs:      tests
  main-is:             Main.hs

  build-depends:       base,
                       gibbon, containers,
                       filepath, directory, process,
                       srcloc, pretty, time,
                       mtl, transformers,
                       tasty, tasty-hunit, tasty-th,
                       text, bytestring
  other-modules:       RouteEnds
                       InferEffects
                       InferLocations
                       Unariser
                       InferRegionScope
                       AddRAN
                       Compiler
                       L1.Typecheck
                       L1.Interp
                       L2.Typecheck
                       L2.Interp
                       L3.Typecheck
                       -- L0.Specialize
  default-language:    Haskell2010
  ghc-options:         -fdefer-typed-holes
  default-extensions:  OverloadedStrings NamedFieldPuns


executable test-gibbon-examples
  hs-source-dirs:      tests
  main-is:             BenchRunner.hs
  build-depends:       gibbon,
                       base, containers, mtl, transformers,
                       process, filepath, directory,
                       time, clock, text, bytestring,
                       yaml, optparse-applicative, scientific,
                       prettyprinter, prettyprinter-ansi-terminal

  default-language:    Haskell2010
  other-modules:       TestRunner
  ghc-options:         -Wall -rtsopts -fdefer-typed-holes
                       -main-is BenchRunner
  default-extensions:  OverloadedStrings NamedFieldPuns
